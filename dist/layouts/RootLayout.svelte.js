/* src\layouts\RootLayout.svelte generated by Svelte v3.43.1 */
import {
	SvelteComponent,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	transition_in,
	transition_out
} from "../../_snowpack/pkg/svelte/internal.js";

import { Route } from '../../_snowpack/pkg/svelte-router-spa.js';

function create_fragment(ctx) {
	let div;
	let route;
	let current;

	route = new Route({
			props: { currentRoute: /*currentRoute*/ ctx[0] }
		});

	return {
		c() {
			div = element("div");
			create_component(route.$$.fragment);
			attr(div, "class", "flex justify-center bg-white");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			mount_component(route, div, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const route_changes = {};
			if (dirty & /*currentRoute*/ 1) route_changes.currentRoute = /*currentRoute*/ ctx[0];
			route.$set(route_changes);
		},
		i(local) {
			if (current) return;
			transition_in(route.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(route.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(route);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { currentRoute } = $$props;

	$$self.$$set = $$props => {
		if ('currentRoute' in $$props) $$invalidate(0, currentRoute = $$props.currentRoute);
	};

	return [currentRoute];
}

class RootLayout extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { currentRoute: 0 });
	}
}

export default RootLayout;